{"id":"shaders/showText/vertex/showTextVertex.glsl","dependencies":[{"name":"/Users/christopherkneller/Documents/Websites/BeeBizzi/GrassRooots/home re-design/package.json","includedInParent":true,"mtime":1666725787919}],"generated":{"js":"module.exports = \"#define GLSLIFY 1\\nuniform float uHoverState;\\n      uniform float uTime;\\n      varying vec2 vUv;\\n      varying float elevation;\\n      \\n      void main(){\\n       float animationAmount = uTime * uHoverState;\\n        vUv = uv;\\n        vec4 modelViewPosition = modelViewMatrix * vec4(position, 1.0);\\n        modelViewPosition.z += sin(uHoverState * (((modelViewPosition.x + modelViewPosition.y) * 8.) + animationAmount)) * 0.1;\\n        elevation = sin(uHoverState * (modelViewPosition.x + modelViewPosition.y + modelViewPosition.z) + animationAmount);\\n        gl_Position = projectionMatrix * modelViewPosition;\\n      }\";"},"sourceMaps":{"js":{"mappings":[{"name":"module","generated":{"line":1,"column":0},"source":"shaders/showText/vertex/showTextVertex.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":6},"source":"shaders/showText/vertex/showTextVertex.glsl","original":{"line":1,"column":6}},{"name":"exports","generated":{"line":1,"column":7},"source":"shaders/showText/vertex/showTextVertex.glsl","original":{"line":1,"column":7}},{"generated":{"line":1,"column":14},"source":"shaders/showText/vertex/showTextVertex.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":17},"source":"shaders/showText/vertex/showTextVertex.glsl","original":{"line":1,"column":15}},{"generated":{"line":1,"column":646},"source":"shaders/showText/vertex/showTextVertex.glsl","original":{"line":1,"column":0}}],"sources":{"shaders/showText/vertex/showTextVertex.glsl":"module.exports=\"#define GLSLIFY 1\\nuniform float uHoverState;\\n      uniform float uTime;\\n      varying vec2 vUv;\\n      varying float elevation;\\n      \\n      void main(){\\n       float animationAmount = uTime * uHoverState;\\n        vUv = uv;\\n        vec4 modelViewPosition = modelViewMatrix * vec4(position, 1.0);\\n        modelViewPosition.z += sin(uHoverState * (((modelViewPosition.x + modelViewPosition.y) * 8.) + animationAmount)) * 0.1;\\n        elevation = sin(uHoverState * (modelViewPosition.x + modelViewPosition.y + modelViewPosition.z) + animationAmount);\\n        gl_Position = projectionMatrix * modelViewPosition;\\n      }\";"},"lineCount":null}},"error":null,"hash":"667a51494eef2e175890ab8276739846","cacheData":{"env":{}}}